package kosa.api;

public class StringExam {

	public static void main(String[] args) {
		
		// 1. String 객체 생성 방법과 차이점
		String str1 = "ABC";
		String str2 = "ABC";// 기존의 문자열 ABC의 주소값을 참조한다
		String str3 = new String("ABC"); // 무조건 new하면 새로운 메모리를 만든다.
		
		if(str1 == str2) {
			System.out.println("길다");
		}else {
			System.out.println("다르다");
		}
		
		//2. String 클래스 불변성의 특징
		// string 클래스 안의 어떤 메서드라도 자기자신을 변경할 수 없다.
		// string 클래스안의 메서드는 return을위해 존재한다.
		// StringBuffer,StringBuilder (가변성) 가능 
		str1.concat("DEF");
		String str4 = str1.concat(str1);
		System.out.println(str1);
		System.out.println(str4);
		
		StringBuffer sb = new StringBuffer("ABC");
		sb.append("DEF");
		System.out.println(sb);
		
		// 연산자 (+) 변경가능
		String sql = "select * from board ";
		int num = 10;
		
		if(num == 10) {
			sql += "where num = 10";
		}
		System.out.println(sql);
		
		// 해당 문자열의 위치를 파악 => indexOf("문자열")
		// => 문자열의 인덱스. 없으면 -1
		System.out.println(sql.indexOf("board"));
		
		
	}
}
